--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = off;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET escape_string_warning = off;

--
-- Name: plpgsql; Type: PROCEDURAL LANGUAGE; Schema: -; Owner: postgres
--

CREATE OR REPLACE PROCEDURAL LANGUAGE plpgsql;


ALTER PROCEDURAL LANGUAGE plpgsql OWNER TO postgres;

SET search_path = public, pg_catalog;

--
-- Name: armor(bytea); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION armor(bytea) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pg_armor';


ALTER FUNCTION public.armor(bytea) OWNER TO admin;

--
-- Name: crypt(text, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION crypt(text, text) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pg_crypt';


ALTER FUNCTION public.crypt(text, text) OWNER TO admin;

--
-- Name: dearmor(text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION dearmor(text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pg_dearmor';


ALTER FUNCTION public.dearmor(text) OWNER TO admin;

--
-- Name: decrypt(bytea, bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION decrypt(bytea, bytea, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pg_decrypt';


ALTER FUNCTION public.decrypt(bytea, bytea, text) OWNER TO admin;

-asasd-
-- Name: decrypt_iv(bytea, bytea, bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION decrypt_iv(bytea, bytea, bytea, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pg_decrypt_iv';


ALTER FUNCTION public.decrypt_iv(bytea, bytea, bytea, text) OWNER TO admin;

--
-- Name: digest(bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION digest(bytea, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pg_digest';


ALTER FUNCTION public.digest(bytea, text) OWNER TO admin;

--
-- Name: digest(text, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION digest(text, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pg_digest';


ALTER FUNCTION public.digest(text, text) OWNER TO admin;

--
-- Name: encrypt(bytea, bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION encrypt(bytea, bytea, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pg_encrypt';


ALTER FUNCTION public.encrypt(bytea, bytea, text) OWNER TO admin;

--
-- Name: encrypt_iv(bytea, bytea, bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION encrypt_iv(bytea, bytea, bytea, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pg_encrypt_iv';


ALTER FUNCTION public.encrypt_iv(bytea, bytea, bytea, text) OWNER TO admin;

--
-- Name: gen_random_bytes(integer); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION gen_random_bytes(integer) RETURNS bytea
    LANGUAGE c STRICT
    AS '$libdir/pgcrypto', 'pg_random_bytes';


ALTER FUNCTION public.gen_random_bytes(integer) OWNER TO admin;

--
-- Name: gen_salt(text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION gen_salt(text) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/pgcrypto', 'pg_gen_salt';


ALTER FUNCTION public.gen_salt(text) OWNER TO admin;

--
-- Name: gen_salt(text, integer); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION gen_salt(text, integer) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/pgcrypto', 'pg_gen_salt_rounds';


ALTER FUNCTION public.gen_salt(text, integer) OWNER TO admin;

--
-- Name: hmac(bytea, bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION hmac(bytea, bytea, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pg_hmac';


ALTER FUNCTION public.hmac(bytea, bytea, text) OWNER TO admin;

--
-- Name: hmac(text, text, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION hmac(text, text, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pg_hmac';


ALTER FUNCTION public.hmac(text, text, text) OWNER TO admin;

--
-- Name: pgp_key_id(bytea); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_key_id(bytea) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pgp_key_id_w';


ALTER FUNCTION public.pgp_key_id(bytea) OWNER TO admin;

--
-- Name: pgp_pub_decrypt(bytea, bytea); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_pub_decrypt(bytea, bytea) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pgp_pub_decrypt_text';


ALTER FUNCTION public.pgp_pub_decrypt(bytea, bytea) OWNER TO admin;

--
-- Name: pgp_pub_decrypt(bytea, bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_pub_decrypt(bytea, bytea, text) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pgp_pub_decrypt_text';


ALTER FUNCTION public.pgp_pub_decrypt(bytea, bytea, text) OWNER TO admin;

--
-- Name: pgp_pub_decrypt(bytea, bytea, text, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_pub_decrypt(bytea, bytea, text, text) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pgp_pub_decrypt_text';


ALTER FUNCTION public.pgp_pub_decrypt(bytea, bytea, text, text) OWNER TO admin;

--
-- Name: pgp_pub_decrypt_bytea(bytea, bytea); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_pub_decrypt_bytea(bytea, bytea) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pgp_pub_decrypt_bytea';


ALTER FUNCTION public.pgp_pub_decrypt_bytea(bytea, bytea) OWNER TO admin;

--
-- Name: pgp_pub_decrypt_bytea(bytea, bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pgp_pub_decrypt_bytea';


ALTER FUNCTION public.pgp_pub_decrypt_bytea(bytea, bytea, text) OWNER TO admin;

--
-- Name: pgp_pub_decrypt_bytea(bytea, bytea, text, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pgp_pub_decrypt_bytea';


ALTER FUNCTION public.pgp_pub_decrypt_bytea(bytea, bytea, text, text) OWNER TO admin;

--
-- Name: pgp_pub_encrypt(text, bytea); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_pub_encrypt(text, bytea) RETURNS bytea
    LANGUAGE c STRICT
    AS '$libdir/pgcrypto', 'pgp_pub_encrypt_text';


ALTER FUNCTION public.pgp_pub_encrypt(text, bytea) OWNER TO admin;

--
-- Name: pgp_pub_encrypt(text, bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_pub_encrypt(text, bytea, text) RETURNS bytea
    LANGUAGE c STRICT
    AS '$libdir/pgcrypto', 'pgp_pub_encrypt_text';


ALTER FUNCTION public.pgp_pub_encrypt(text, bytea, text) OWNER TO admin;

--
-- Name: pgp_pub_encrypt_bytea(bytea, bytea); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_pub_encrypt_bytea(bytea, bytea) RETURNS bytea
    LANGUAGE c STRICT
    AS '$libdir/pgcrypto', 'pgp_pub_encrypt_bytea';


ALTER FUNCTION public.pgp_pub_encrypt_bytea(bytea, bytea) OWNER TO admin;

--
-- Name: pgp_pub_encrypt_bytea(bytea, bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_pub_encrypt_bytea(bytea, bytea, text) RETURNS bytea
    LANGUAGE c STRICT
    AS '$libdir/pgcrypto', 'pgp_pub_encrypt_bytea';


ALTER FUNCTION public.pgp_pub_encrypt_bytea(bytea, bytea, text) OWNER TO admin;

--
-- Name: pgp_sym_decrypt(bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_sym_decrypt(bytea, text) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pgp_sym_decrypt_text';


ALTER FUNCTION public.pgp_sym_decrypt(bytea, text) OWNER TO admin;

--
-- Name: pgp_sym_decrypt(bytea, text, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_sym_decrypt(bytea, text, text) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pgp_sym_decrypt_text';


ALTER FUNCTION public.pgp_sym_decrypt(bytea, text, text) OWNER TO admin;

--
-- Name: pgp_sym_decrypt_bytea(bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_sym_decrypt_bytea(bytea, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pgp_sym_decrypt_bytea';


ALTER FUNCTION public.pgp_sym_decrypt_bytea(bytea, text) OWNER TO admin;

--
-- Name: pgp_sym_decrypt_bytea(bytea, text, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_sym_decrypt_bytea(bytea, text, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/pgcrypto', 'pgp_sym_decrypt_bytea';


ALTER FUNCTION public.pgp_sym_decrypt_bytea(bytea, text, text) OWNER TO admin;

--
-- Name: pgp_sym_encrypt(text, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_sym_encrypt(text, text) RETURNS bytea
    LANGUAGE c STRICT
    AS '$libdir/pgcrypto', 'pgp_sym_encrypt_text';


ALTER FUNCTION public.pgp_sym_encrypt(text, text) OWNER TO admin;

--
-- Name: pgp_sym_encrypt(text, text, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_sym_encrypt(text, text, text) RETURNS bytea
    LANGUAGE c STRICT
    AS '$libdir/pgcrypto', 'pgp_sym_encrypt_text';


ALTER FUNCTION public.pgp_sym_encrypt(text, text, text) OWNER TO admin;

--
-- Name: pgp_sym_encrypt_bytea(bytea, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_sym_encrypt_bytea(bytea, text) RETURNS bytea
    LANGUAGE c STRICT
    AS '$libdir/pgcrypto', 'pgp_sym_encrypt_bytea';


ALTER FUNCTION public.pgp_sym_encrypt_bytea(bytea, text) OWNER TO admin;

--
-- Name: pgp_sym_encrypt_bytea(bytea, text, text); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION pgp_sym_encrypt_bytea(bytea, text, text) RETURNS bytea
    LANGUAGE c STRICT
    AS '$libdir/pgcrypto', 'pgp_sym_encrypt_bytea';


ALTER FUNCTION public.pgp_sym_encrypt_bytea(bytea, text, text) OWNER TO admin;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: Album; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE "Album" (
    name text,
    release_date date,
    total_duration integer,
    "album_ID" integer NOT NULL
);


ALTER TABLE "Album" OWNER TO s0544321;

--
-- Name: Album_album_ID_seq; Type: SEQUENCE; Schema: public; Owner: s0544321
--

CREATE SEQUENCE "Album_album_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Album_album_ID_seq" OWNER TO s0544321;

--
-- Name: Album_album_ID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: s0544321
--

ALTER SEQUENCE "Album_album_ID_seq" OWNED BY "Album"."album_ID";


--
-- Name: Artists; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE "Artists" (
    name text,
    given_name text,
    alias text,
    dob date,
    "artist_ID" integer NOT NULL
);


ALTER TABLE "Artists" OWNER TO s0544321;

--
-- Name: Artists_artist_ID_seq; Type: SEQUENCE; Schema: public; Owner: s0544321
--

CREATE SEQUENCE "Artists_artist_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Artists_artist_ID_seq" OWNER TO s0544321;

--
-- Name: Artists_artist_ID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: s0544321
--

ALTER SEQUENCE "Artists_artist_ID_seq" OWNED BY "Artists"."artist_ID";


--
-- Name: Band; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE "Band" (
    name text,
    "band_ID" integer NOT NULL
);


ALTER TABLE "Band" OWNER TO s0544321;

--
-- Name: Band_band_ID_seq; Type: SEQUENCE; Schema: public; Owner: s0544321
--

CREATE SEQUENCE "Band_band_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Band_band_ID_seq" OWNER TO s0544321;

--
-- Name: Band_band_ID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: s0544321
--

ALTER SEQUENCE "Band_band_ID_seq" OWNED BY "Band"."band_ID";


--
-- Name: Cities; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE "Cities" (
    name text NOT NULL,
    "city_ID" integer NOT NULL
);


ALTER TABLE "Cities" OWNER TO s0544321;

--
-- Name: Cities_city_ID_seq; Type: SEQUENCE; Schema: public; Owner: s0544321
--

CREATE SEQUENCE "Cities_city_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Cities_city_ID_seq" OWNER TO s0544321;

--
-- Name: Cities_city_ID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: s0544321
--

ALTER SEQUENCE "Cities_city_ID_seq" OWNED BY "Cities"."city_ID";


--
-- Name: Consists_of; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE "Consists_of" (
    "artist_ID" integer NOT NULL,
    "band_ID" integer NOT NULL
);


ALTER TABLE "Consists_of" OWNER TO s0544321;

--
-- Name: Country; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE "Country" (
    name text,
    "country_ID" integer NOT NULL
);


ALTER TABLE "Country" OWNER TO s0544321;

--
-- Name: Country_country_ID_seq; Type: SEQUENCE; Schema: public; Owner: s0544321
--

CREATE SEQUENCE "Country_country_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Country_country_ID_seq" OWNER TO s0544321;

--
-- Name: Country_country_ID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: s0544321
--

ALTER SEQUENCE "Country_country_ID_seq" OWNED BY "Country"."country_ID";


--
-- Name: Genre; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE "Genre" (
    name integer NOT NULL,
    "genre_ID" integer NOT NULL
);


ALTER TABLE "Genre" OWNER TO s0544321;

--
-- Name: Genre_genre_ID_seq; Type: SEQUENCE; Schema: public; Owner: s0544321
--

CREATE SEQUENCE "Genre_genre_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Genre_genre_ID_seq" OWNER TO s0544321;

--
-- Name: Genre_genre_ID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: s0544321
--

ALTER SEQUENCE "Genre_genre_ID_seq" OWNED BY "Genre"."genre_ID";


--
-- Name: Genre_name_seq; Type: SEQUENCE; Schema: public; Owner: s0544321
--

CREATE SEQUENCE "Genre_name_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Genre_name_seq" OWNER TO s0544321;

--
-- Name: Genre_name_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: s0544321
--

ALTER SEQUENCE "Genre_name_seq" OWNED BY "Genre".name;


--
-- Name: Song; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE "Song" (
    title text,
    duration integer,
    "genre_ID" integer,
    "album_ID" integer,
    "artist_ID" integer,
    "song_ID" integer NOT NULL
);


ALTER TABLE "Song" OWNER TO s0544321;

--
-- Name: Song_song_ID_seq; Type: SEQUENCE; Schema: public; Owner: s0544321
--

CREATE SEQUENCE "Song_song_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Song_song_ID_seq" OWNER TO s0544321;

--
-- Name: Song_song_ID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: s0544321
--

ALTER SEQUENCE "Song_song_ID_seq" OWNED BY "Song"."song_ID";


--
-- Name: Tour; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE "Tour" (
    name text,
    begin_date date,
    end_date date,
    "tour_ID" integer NOT NULL
);


ALTER TABLE "Tour" OWNER TO s0544321;

--
-- Name: Tour_tour_ID	_seq; Type: SEQUENCE; Schema: public; Owner: s0544321
--

CREATE SEQUENCE "Tour_tour_ID	_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Tour_tour_ID	_seq" OWNER TO s0544321;

--
-- Name: Tour_tour_ID	_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: s0544321
--

ALTER SEQUENCE "Tour_tour_ID	_seq" OWNED BY "Tour"."tour_ID";


--
-- Name: belongs_to; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE belongs_to (
    "genre_ID" integer NOT NULL,
    "song_ID" integer NOT NULL
);


ALTER TABLE belongs_to OWNER TO s0544321;

--
-- Name: comes_from; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE comes_from (
    "artist_ID" integer NOT NULL,
    "city_ID" integer NOT NULL
);


ALTER TABLE comes_from OWNER TO s0544321;

--
-- Name: held_in; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE held_in (
    "tour_ID" integer NOT NULL,
    "city_ID" integer NOT NULL
);


ALTER TABLE held_in OWNER TO s0544321;

--
-- Name: inlcudes; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE inlcudes (
    "album_ID" integer NOT NULL,
    "song_ID" integer NOT NULL
);


ALTER TABLE inlcudes OWNER TO s0544321;

--
-- Name: located_in; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE located_in (
    "city_ID" integer NOT NULL,
    "country_ID" integer NOT NULL
);


ALTER TABLE located_in OWNER TO s0544321;

SET default_with_oids = true;

--
-- Name: makes; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE makes (
    "band_ID" integer NOT NULL,
    "tour_ID" integer NOT NULL
);


ALTER TABLE makes OWNER TO s0544321;

SET default_with_oids = false;

--
-- Name: plays; Type: TABLE; Schema: public; Owner: s0544321; Tablespace: 
--

CREATE TABLE plays (
    "artist_ID" integer NOT NULL,
    "song_ID" integer NOT NULL
);


ALTER TABLE plays OWNER TO s0544321;

--
-- Name: album_ID; Type: DEFAULT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY "Album" ALTER COLUMN "album_ID" SET DEFAULT nextval('"Album_album_ID_seq"'::regclass);


--
-- Name: artist_ID; Type: DEFAULT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY "Artists" ALTER COLUMN "artist_ID" SET DEFAULT nextval('"Artists_artist_ID_seq"'::regclass);


--
-- Name: band_ID; Type: DEFAULT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY "Band" ALTER COLUMN "band_ID" SET DEFAULT nextval('"Band_band_ID_seq"'::regclass);


--
-- Name: city_ID; Type: DEFAULT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY "Cities" ALTER COLUMN "city_ID" SET DEFAULT nextval('"Cities_city_ID_seq"'::regclass);


--
-- Name: country_ID; Type: DEFAULT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY "Country" ALTER COLUMN "country_ID" SET DEFAULT nextval('"Country_country_ID_seq"'::regclass);


--
-- Name: name; Type: DEFAULT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY "Genre" ALTER COLUMN name SET DEFAULT nextval('"Genre_name_seq"'::regclass);


--
-- Name: genre_ID; Type: DEFAULT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY "Genre" ALTER COLUMN "genre_ID" SET DEFAULT nextval('"Genre_genre_ID_seq"'::regclass);


--
-- Name: song_ID; Type: DEFAULT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY "Song" ALTER COLUMN "song_ID" SET DEFAULT nextval('"Song_song_ID_seq"'::regclass);


--
-- Name: tour_ID; Type: DEFAULT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY "Tour" ALTER COLUMN "tour_ID" SET DEFAULT nextval('"Tour_tour_ID	_seq"'::regclass);


--
-- Name: Artist_alias_key; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY "Artists"
    ADD CONSTRAINT "Artist_alias_key" UNIQUE (alias);


--
-- Name: album_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY "Album"
    ADD CONSTRAINT "album_PK" PRIMARY KEY ("album_ID");


--
-- Name: artist_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY "Artists"
    ADD CONSTRAINT "artist_PK" PRIMARY KEY ("artist_ID");


--
-- Name: band_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY "Band"
    ADD CONSTRAINT "band_PK" PRIMARY KEY ("band_ID");


--
-- Name: belongs_to_ID; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY belongs_to
    ADD CONSTRAINT "belongs_to_ID" PRIMARY KEY ("genre_ID", "song_ID");


--
-- Name: city_Pk; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY "Cities"
    ADD CONSTRAINT "city_Pk" PRIMARY KEY ("city_ID");


--
-- Name: comes_from_ID; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY comes_from
    ADD CONSTRAINT "comes_from_ID" PRIMARY KEY ("artist_ID", "city_ID");


--
-- Name: consists_of_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY "Consists_of"
    ADD CONSTRAINT "consists_of_PK" PRIMARY KEY ("artist_ID", "band_ID");


--
-- Name: country_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY "Country"
    ADD CONSTRAINT "country_PK" PRIMARY KEY ("country_ID");


--
-- Name: genre_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY "Genre"
    ADD CONSTRAINT "genre_PK" PRIMARY KEY ("genre_ID");


--
-- Name: held_in_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY held_in
    ADD CONSTRAINT "held_in_PK" PRIMARY KEY ("tour_ID", "city_ID");


--
-- Name: inlcludes_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY inlcudes
    ADD CONSTRAINT "inlcludes_PK" PRIMARY KEY ("album_ID", "song_ID");


--
-- Name: located_in_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY located_in
    ADD CONSTRAINT "located_in_PK" PRIMARY KEY ("city_ID", "country_ID");


--
-- Name: makes_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY makes
    ADD CONSTRAINT "makes_PK" PRIMARY KEY ("band_ID", "tour_ID");


--
-- Name: plays_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY plays
    ADD CONSTRAINT "plays_PK" PRIMARY KEY ("artist_ID", "song_ID");


--
-- Name: song_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY "Song"
    ADD CONSTRAINT "song_PK" PRIMARY KEY ("song_ID");


--
-- Name: tour_PK; Type: CONSTRAINT; Schema: public; Owner: s0544321; Tablespace: 
--

ALTER TABLE ONLY "Tour"
    ADD CONSTRAINT "tour_PK" PRIMARY KEY ("tour_ID");


--
-- Name: album_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY inlcudes
    ADD CONSTRAINT "album_FK" FOREIGN KEY ("album_ID") REFERENCES "Album"("album_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: artist_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY "Consists_of"
    ADD CONSTRAINT "artist_FK" FOREIGN KEY ("artist_ID") REFERENCES "Artists"("artist_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: artist_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY comes_from
    ADD CONSTRAINT "artist_FK" FOREIGN KEY ("artist_ID") REFERENCES "Artists"("artist_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: artist_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY plays
    ADD CONSTRAINT "artist_FK" FOREIGN KEY ("artist_ID") REFERENCES "Artists"("artist_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: band_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY "Consists_of"
    ADD CONSTRAINT "band_FK" FOREIGN KEY ("band_ID") REFERENCES "Band"("band_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: band_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY makes
    ADD CONSTRAINT "band_FK" FOREIGN KEY ("band_ID") REFERENCES "Band"("band_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: city_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY comes_from
    ADD CONSTRAINT "city_FK" FOREIGN KEY ("city_ID") REFERENCES "Cities"("city_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: city_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY held_in
    ADD CONSTRAINT "city_FK" FOREIGN KEY ("city_ID") REFERENCES "Cities"("city_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: city_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY located_in
    ADD CONSTRAINT "city_FK" FOREIGN KEY ("city_ID") REFERENCES "Cities"("city_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: country_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY located_in
    ADD CONSTRAINT "country_FK" FOREIGN KEY ("country_ID") REFERENCES "Country"("country_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: genre_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY belongs_to
    ADD CONSTRAINT "genre_FK" FOREIGN KEY ("genre_ID") REFERENCES "Genre"("genre_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: makes_tour_ID_fkey; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY makes
    ADD CONSTRAINT "makes_tour_ID_fkey" FOREIGN KEY ("tour_ID") REFERENCES "Tour"("tour_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: song_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY belongs_to
    ADD CONSTRAINT "song_FK" FOREIGN KEY ("song_ID") REFERENCES "Song"("song_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: song_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY inlcudes
    ADD CONSTRAINT "song_FK" FOREIGN KEY ("song_ID") REFERENCES "Song"("song_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: song_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY plays
    ADD CONSTRAINT "song_FK" FOREIGN KEY ("song_ID") REFERENCES "Song"("song_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: tour_FK; Type: FK CONSTRAINT; Schema: public; Owner: s0544321
--

ALTER TABLE ONLY held_in
    ADD CONSTRAINT "tour_FK" FOREIGN KEY ("tour_ID") REFERENCES "Tour"("tour_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- Name: Album; Type: ACL; Schema: public; Owner: s0544321
--

REVOKE ALL ON TABLE "Album" FROM PUBLIC;
REVOKE ALL ON TABLE "Album" FROM s0544321;
GRANT ALL ON TABLE "Album" TO s0544321;
GRANT ALL ON TABLE "Album" TO s0547796;


--
-- Name: Artists; Type: ACL; Schema: public; Owner: s0544321
--

REVOKE ALL ON TABLE "Artists" FROM PUBLIC;
REVOKE ALL ON TABLE "Artists" FROM s0544321;
GRANT ALL ON TABLE "Artists" TO s0544321;
GRANT ALL ON TABLE "Artists" TO s0547796;


--
-- Name: Band; Type: ACL; Schema: public; Owner: s0544321
--

REVOKE ALL ON TABLE "Band" FROM PUBLIC;
REVOKE ALL ON TABLE "Band" FROM s0544321;
GRANT ALL ON TABLE "Band" TO s0544321;
GRANT ALL ON TABLE "Band" TO s0547796;


--
-- Name: Country; Type: ACL; Schema: public; Owner: s0544321
--

REVOKE ALL ON TABLE "Country" FROM PUBLIC;
REVOKE ALL ON TABLE "Country" FROM s0544321;
GRANT ALL ON TABLE "Country" TO s0544321;
GRANT ALL ON TABLE "Country" TO s0547796;


--
-- Name: Genre; Type: ACL; Schema: public; Owner: s0544321
--

REVOKE ALL ON TABLE "Genre" FROM PUBLIC;
REVOKE ALL ON TABLE "Genre" FROM s0544321;
GRANT ALL ON TABLE "Genre" TO s0544321;
GRANT ALL ON TABLE "Genre" TO s0547796;


--
-- Name: Song; Type: ACL; Schema: public; Owner: s0544321
--

REVOKE ALL ON TABLE "Song" FROM PUBLIC;
REVOKE ALL ON TABLE "Song" FROM s0544321;
GRANT ALL ON TABLE "Song" TO s0544321;
GRANT ALL ON TABLE "Song" TO s0547796;


--
-- Name: Tour; Type: ACL; Schema: public; Owner: s0544321
--

REVOKE ALL ON TABLE "Tour" FROM PUBLIC;
REVOKE ALL ON TABLE "Tour" FROM s0544321;
GRANT ALL ON TABLE "Tour" TO s0544321;
GRANT ALL ON TABLE "Tour" TO s0547796;


--
-- Name: comes_from; Type: ACL; Schema: public; Owner: s0544321
--

REVOKE ALL ON TABLE comes_from FROM PUBLIC;
REVOKE ALL ON TABLE comes_from FROM s0544321;
GRANT ALL ON TABLE comes_from TO s0544321;
GRANT ALL ON TABLE comes_from TO s0547796;


--
-- PostgreSQL database dump complete
--

